import webbrowser
import tkinter.messagebox
import cv2
import numpy as np
import matplotlib.pylab as plt
import matplotlib.image as mpimg
import random
import string
import generator


# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\denni\Documents\Uni\Master\Sommersemester_2025\Engineering_ML_based_Systems\Abschlussprojekt\build\assets\frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


def main()->None:

    def show_image()->None:
        '''length = 512
        if str(entry_1.get()) == '':
            seed = ''.join(random.choices(string.digits, k=length))
        else:
            seed = str(entry_1.get())
        img = mpimg.imread(relative_to_assets('dummy.jpg'))'''
        seed, img = generator.main()
        print(type(img))
        plt.imshow(img)
        plt.axis('off')
        plt.title(seed)
        plt.show()
    
    window = Tk()

    window.geometry("840x840")
    window.configure(bg = "#213055")



    canvas = Canvas(
        window,
        bg = "#213055",
        height = 840,
        width = 840,
        bd = 0,
        highlightthickness = 0,
        relief = "ridge"
    )

    canvas.place(x = 0, y = 0)
    button_image_1 = PhotoImage(
        file=relative_to_assets("button_1.png"))
    button_1 = Button(
        image=button_image_1,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: webbrowser.open('https://labs.onb.ac.at/en/datasets/akon/'),
        relief="flat"
    )
    button_1.place(
        x=0.0,
        y=0.0,
        width=840.0,
        height=333.0
    )

    canvas.create_text(
        255.0,
        340.0,
        anchor="nw",
        text="GAN-CARD",
        fill="#FFFFFF",
        font=("UnifrakturCook Bold", 64 * -1)
    )

    entry_image_1 = PhotoImage(
        file=relative_to_assets("entry_1.png"))
    entry_bg_1 = canvas.create_image(
        420.0,
        520.5,
        image=entry_image_1
    )
    entry_1 = Entry(
        bd=0,
        bg="#4E897D",
        fg="#000716",
        highlightthickness=0
    )
    entry_1.place(
        x=262.0,
        y=501.0,
        width=316.0,
        height=37.0
    )

    canvas.create_text(
        262.0,
        466.0,
        anchor="nw",
        text="Seed",
        fill="#FFFFFF",
        font=("Roboto Medium", 14 * -1)
    )

    button_image_2 = PhotoImage(
        file=relative_to_assets("button_2.png"))
    button_2 = Button(
        image=button_image_2,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: show_image(),
        relief="flat"
    )
    button_2.place(
        x=25.0,
        y=683.0,
        width=230.0,
        height=76.0
    )

    button_image_3 = PhotoImage(
        file=relative_to_assets("button_3.png"))
    button_3 = Button(
        image=button_image_3,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: tkinter.messagebox.showinfo('How to use', 'You can either use a seed to generate this picture or leave this empty. Second method will use a random seed.'),
        relief="flat"
    )
    button_3.place(
        x=314.0,
        y=683.0,
        width=230.0,
        height=76.0
    )

    button_image_4 = PhotoImage(
        file=relative_to_assets("button_4.png"))
    button_4 = Button(
        image=button_image_4,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: tkinter.messagebox.showinfo('Credits', '              GAN-CARD\n Dennis Becker & Lukas Laaser\nEngineering ML-based Systems'),
        relief="flat"
    )
    button_4.place(
        x=603.0,
        y=683.0,
        width=230.0,
        height=76.0
    )
    window.resizable(False, False)
    window.mainloop()


if __name__ == '__main__':
    main()